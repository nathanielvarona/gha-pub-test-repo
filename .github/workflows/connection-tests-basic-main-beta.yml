name: Connection Tests - Basic Main Branch (Beta Runner)

on:
  workflow_dispatch:

jobs:
  connection-tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04
        vpn-mode:
          - ovpn
          - wg
    runs-on: ${{ matrix.os }}
    name: "run:${{ matrix.os }}, ${{ matrix.vpn-mode }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pritunl Profile
        id: pritunl-connection
        uses: nathanielvarona/pritunl-client-github-action@main
        with:
          profile-file: ${{ secrets.PRITUNL_PROFILE_FILE_BASIC }}
          vpn-mode: ${{ matrix.vpn-mode }}

      - name: Install IP Tooling (IP Calculator)
        shell: bash
        run: |
          # Install IP Calculator

          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -qq -o=Dpkg::Use-Pty=0 -y ipcalc
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install -q ipcalc
          elif [ "$RUNNER_OS" == "Windows" ]; then
            # Retry up to 3 times in case of failure
            for attempt in $(seq 3); do
              if curl -sSL "https://raw.githubusercontent.com/kjokjo/ipcalc/0.51/ipcalc" \
                -o $HOME/bin/ipcalc && chmod +x $HOME/bin/ipcalc; then
                break
              else
                echo "Attempt $attempt failed. Retrying..." && sleep 1
                # If all retries fail, exit with an error
                if [ $attempt -eq 3 ]; then
                  echo "Failed to install ipcalc after 3 attempts." && exit 1
                fi
              fi
            done
          fi

          # Validate the IP Calculator Installation
          echo "ipcalc version $(ipcalc --version)"

      - name:  VPN Gateway Reachability Test
        shell: bash
        run: |
          # VPN Gateway Reachability Test

          ping_count_number=5
          profile_ip=$(pritunl-client list -j | jq ". | sort_by(.name)" | jq ".[0]" | jq -r ".client_address")

          vpn_gateway="$(ipcalc $profile_ip | awk 'NR==6{print $2}')"
          ping_flags="$([[ "$RUNNER_OS" == "Windows" ]] && echo "-n $ping_count_number" || echo "-c $ping_count_number")"

          # Ping VPN Gateway
          ping $vpn_gateway $ping_flags
